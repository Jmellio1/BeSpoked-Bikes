@page "/"
@using BeSpoked_Bikes.Models
@using BeSpoked_Bikes.Data
@inject IProductsContoller _controller
@using Syncfusion.Blazor
@inject NavigationManager NavigationManager
@inject ICustomerController CustController
@using Syncfusion.Blazor.DropDowns
<h2> Select or add customer</h2>
<div class="control_wrapper">
    @if(customers is null){
        
      <p><em>Loading...</em></p>
    }else{
   <SfDropDownList TValue="string" TItem="Customer" PopupHeight="400px" PopupWidth="350px"
                Placeholder="Select a customer" DataSource="@customers">
                <DropDownListFieldSettings Value="Id" Text="fName"></DropDownListFieldSettings>
            </SfDropDownList>
    }
    <button type="submit" @onclick="()=>createCustomer()">Create cutomer</button>
  </div>


@if(products is null)
{
      <p><em>Loading...</em></p>
}
else
{
    <table class=" table table-striped">
           <thead>
               <tr>
                   <th>Bike name </th>
                    <th>Manufacturer </th>
                     <th>purchase Price </th>
                      <th>Sale Price </th>
                      <th>inventory</th>
                      <th>commission</th>
                      <th>Selling?</th>
                      <th>Edit</th>
               </tr>
           </thead>
           <tbody>
            @foreach(var item in products)
            {
                
                 <tr>
                     <td>@item.Name</td>
                      <td>@item.Manufacturer</td>        
                        <td>@item.purchasePrice</td>
                         <td>@item.SalePrice</td>
                         <td>@item.inventory</td>
                         <td>@item.commission</td>
                         <td><input type="checkbox" value="@item.Id"></td>
                         <td><button @onclick="()=>edit(item.Id)">Edit</button></td>
                 </tr>
                
            }
        </tbody>
           </table>
}
@code {
    private Product product = new Product();
    private List<Customer> customers;
    private List<Product> products;
    protected override async Task OnInitializedAsync()
    {
        products = await _controller.List();
        customers = await CustController.List();
        var hold = customers;


    }
    private async Task createCustomer()
    {
           NavigationManager.NavigateTo("/products/create", true);
    }
    private void edit(int id)
    {
        Console.Out.WriteLine(id);
        // return edit page
    }
}
